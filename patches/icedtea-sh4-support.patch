--- openjdk/hotspot/src/os/linux/vm/os_linux.cpp	2009-12-24 14:56:12.000000000 +0900
+++ openjdk/hotspot/src/os/linux/vm/os_linux.cpp	2009-12-24 15:02:51.000000000 +0900
@@ -1753,7 +1753,8 @@
     {EM_MIPS_RS3_LE, EM_MIPS_RS3_LE, ELFCLASS32, ELFDATA2LSB, (char*)"MIPSel"},
     {EM_MIPS,        EM_MIPS,    ELFCLASS32, ELFDATA2MSB, (char*)"MIPS"},
     {EM_PARISC,      EM_PARISC,  ELFCLASS32, ELFDATA2MSB, (char*)"PARISC"},
-    {EM_68K,         EM_68K,     ELFCLASS32, ELFDATA2MSB, (char*)"M68k"}
+    {EM_68K,         EM_68K,     ELFCLASS32, ELFDATA2MSB, (char*)"M68k"},
+    {EM_SH,          EM_SH,      ELFCLASS32, ELFDATA2LSB, (char*)"SH"} /* Support little endian only*/
   };
 
   #if  (defined IA32)
@@ -1784,9 +1785,11 @@
     static  Elf32_Half running_arch_code=EM_MIPS;
   #elif  (defined M68K)
     static  Elf32_Half running_arch_code=EM_68K;
+  #elif  (defined SH)
+    static  Elf32_Half running_arch_code=EM_SH;
   #else
     #error Method os::dll_load requires that one of following is defined:\
-         IA32, AMD64, IA64, __sparc, __powerpc__, ARM, S390, ALPHA, MIPS, MIPSEL, PARISC, M68K
+         IA32, AMD64, IA64, __sparc, __powerpc__, ARM, S390, ALPHA, MIPS, MIPSEL, PARISC, M68K, SH
   #endif
 
   // Identify compatability class for VM's architecture and library's architecture
--- openjdk/jdk/src/share/native/com/sun/media/sound/SoundDefs.h	2009-12-24 14:56:10.000000000 +0900
+++ openjdk/jdk/src/share/native/com/sun/media/sound/SoundDefs.h	2009-12-24 15:05:27.000000000 +0900
@@ -47,7 +47,8 @@
 #define X_S390X         12
 #define X_SPARC         13
 #define X_SPARCV9       14
-#define X_ZERO          15
+#define X_SH            15
+#define X_ZERO          16
 
 // **********************************
 // Make sure you set X_PLATFORM and X_ARCH defines correctly.
--- openjdk/jdk/make/common/shared/Compiler-gcc.gmk	2009-12-24 15:11:52.000000000 +0900
+++ openjdk/jdk/make/common/shared/Compiler-gcc.gmk	2009-12-24 15:12:17.000000000 +0900
@@ -121,6 +121,11 @@
     REQUIRED_CC_VER = 4.0
     REQUIRED_GCC_VER = 4.0.*
   endif
+  ifneq ("$(findstring sh,$(ARCH))", "")
+    # sh4*, sh3*
+    REQUIRED_CC_VER = 4.0
+    REQUIRED_GCC_VER = 4.0.*
+  endif
   # Option used to create a shared library
   SHARED_LIBRARY_FLAG = -shared -mimpure-text
   SUN_COMP_VER := $(shell $(CC) --verbose 2>&1 )
--- openjdk/corba/make/common/shared/Platform.gmk	2009-12-24 21:30:38.000000000 +0900
+++ openjdk/corba/make/common/shared/Platform.gmk	2009-12-25 10:17:14.000000000 +0900
@@ -263,6 +263,9 @@
       ifeq ($(ARCH), s390x)
         ARCH_DATA_MODEL=64
       endif
+      ifeq ($(ARCH), sh)
+        ARCH_DATA_MODEL=32
+      endif
     endif
   endif
 
--- openjdk/corba/make/common/shared/Platform.gmk	2010-01-18 22:27:21.000000000 +0900
+++ openjdk/corba/make/common/shared/Platform.gmk	2010-01-18 22:28:50.000000000 +0900
@@ -205,6 +205,9 @@
                 arm*) \
                     echo arm \
                     ;; \
+                sh*) \
+                    echo sh \
+                    ;; \
                 *) \
                     echo $(mach) \
                     ;; \
--- openjdk/jdk/make/common/shared/Platform.gmk	2010-01-18 22:39:35.000000000 +0900
+++ openjdk/jdk/make/common/shared/Platform.gmk	2010-01-19 09:39:26.000000000 +0900
@@ -214,6 +214,9 @@
                 arm*) \
                     echo arm \
                     ;; \
+                sh*) \
+                    echo sh \
+                    ;; \
                 *) \
                     echo $(mach) \
                     ;; \
@@ -272,6 +275,9 @@
       ifeq ($(ARCH), s390x)
         ARCH_DATA_MODEL=64
       endif
+      ifeq ($(ARCH), sh)
+        ARCH_DATA_MODEL=32
+      endif
     endif
   endif
 
--- openjdk/jdk/make/jdk_generic_profile.sh	2010-01-19 09:49:57.000000000 +0900
+++ openjdk/jdk/make/jdk_generic_profile.sh	2010-01-19 21:44:30.000000000 +0900
@@ -350,13 +350,14 @@
     i?86)    ZERO_LIBARCH=i386      ;;
     sparc64) ZERO_LIBARCH=sparcv9   ;;
     arm*)    ZERO_LIBARCH=arm       ;;
+    sh*)     ZERO_LIBARCH=sh        ;;
     *)       ZERO_LIBARCH="$(arch)"
   esac
   export ZERO_LIBARCH
 
   # ARCH_DATA_MODEL is the number of bits in a pointer
   case "${ZERO_LIBARCH}" in
-    i386|ppc|s390|sparc|arm)
+    i386|ppc|s390|sparc|arm|sh)
       ARCH_DATA_MODEL=32
       ;;
     amd64|ppc64|s390x|sparcv9|ia64|alpha)
--- openjdk/jdk/make/javax/sound/SoundDefs.gmk	2010-01-19 22:35:25.000000000 +0900
+++ openjdk/jdk/make/javax/sound/SoundDefs.gmk	2010-01-20 11:42:28.000000000 +0900
@@ -113,6 +113,10 @@
   ifeq ($(ARCH), sparcv9)
     CPPFLAGS += -DX_ARCH=X_SPARCV9
   endif # ARCH sparcv9
+
+  ifeq ($(ARCH), sh)
+    CPPFLAGS += -DX_ARCH=X_SH
+  endif # ARCH Renesas SuperH(sh)
 endif
 
 
--- openjdk/jdk/make/common/Defs-linux.gmk	2010-01-21 13:27:43.000000000 +0900
+++ openjdk/jdk/make/common/Defs-linux.gmk	2010-01-21 13:28:50.000000000 +0900
@@ -119,6 +119,7 @@
 LDFLAGS_COMMON_sparcv9  += -m64 -mcpu=v9
 CFLAGS_REQUIRED_sparc   += -m32 -mcpu=v9
 LDFLAGS_COMMON_sparc    += -m32 -mcpu=v9
+CFLAGS_REQUIRED_sh   += -mieee
 ifeq ($(ZERO_BUILD), true)
   CFLAGS_REQUIRED       =  $(ZERO_ARCHFLAG)
   ifeq ($(ZERO_ENDIANNESS), little)
@@ -202,7 +203,7 @@
   CXXFLAGS_DBG	+= $(CC_LOWER_OPT)
 endif
 
-CPPFLAGS_COMMON = -D_$(ARCH)_ $(if $(filter $(ARCH),alpha),,-D$(ARCH)) \
+CPPFLAGS_COMMON = -D_$(ARCH)_ $(if $(filter $(ARCH),alpha sh),,-D$(ARCH)) \
 		  -DARCH='"$(ARCH)"' -DLINUX $(VERSION_DEFINES) \
 		  -D_LARGEFILE64_SOURCE -D_GNU_SOURCE -D_REENTRANT
 
--- openjdk/corba/make/common/Defs-linux.gmk	2010-01-21 13:29:49.000000000 +0900
+++ openjdk/corba/make/common/Defs-linux.gmk	2010-01-21 13:30:58.000000000 +0900
@@ -109,6 +109,7 @@
 LDFLAGS_COMMON_sparcv9  += -m64 -mcpu=v9
 CFLAGS_REQUIRED_sparc   += -m32 -mcpu=v9
 LDFLAGS_COMMON_sparc    += -m32 -mcpu=v9
+CFLAGS_REQUIRED_sh   += -mieee
 ifeq ($(ZERO_BUILD), true)
   CFLAGS_REQUIRED       =  $(ZERO_ARCHFLAG)
   ifeq ($(ZERO_ENDIANNESS), little)
@@ -186,7 +187,7 @@
   CXXFLAGS_DBG	+= $(CC_LOWER_OPT)
 endif
 
-CPPFLAGS_COMMON = -D_$(ARCH)_ $(if $(filter $(ARCH),alpha),,-D$(ARCH)) \
+CPPFLAGS_COMMON = -D_$(ARCH)_ $(if $(filter $(ARCH),alpha sh),,-D$(ARCH)) \
 		  -DARCH='"$(ARCH)"' -DLINUX $(VERSION_DEFINES) \
 		  -D_LARGEFILE64_SOURCE -D_GNU_SOURCE -D_REENTRANT
 
