# HG changeset patch
# User acorn
# Date 1268677738 14400
# Node ID 77940ab6c3558ccc1b859a2e28cb0db440d9f5b6
# Parent  9d4986fcac2a07806ffed8a33184da149f76719b
6932480: Crash in CompilerThread/Parser. Unloaded array klass?
Summary: Restore code deleted in 6626217
Reviewed-by: asaha, kevinw

diff --git openjdk.orig/hotspot/src/share/vm/ci/ciEnv.cpp openjdk/hotspot/src/share/vm/ci/ciEnv.cpp
--- openjdk.orig/hotspot/src/share/vm/ci/ciEnv.cpp
+++ openjdk/hotspot/src/share/vm/ci/ciEnv.cpp
@@ -343,6 +343,30 @@ ciKlass* ciEnv::get_klass_by_name_impl(c
     found_klass =
       SystemDictionary::find_instance_or_array_klass(sym, loader, domain,
                                                      KILL_COMPILE_ON_FATAL_(fail_type));
+  }
+
+  // If we fail to find an array klass, look again for its element type.
+  // The element type may be available either locally or via constraints.
+  // In either case, if we can find the element type in the system dictionary,
+  // we must build an array type around it.  The CI requires array klasses
+  // to be loaded if their element klasses are loaded, except when memory
+  // is exhausted.
+  if (sym->byte_at(0) == '[' &&
+      (sym->byte_at(1) == '[' || sym->byte_at(1) == 'L')) {
+    // We have an unloaded array.
+    // Build it on the fly if the element class exists.
+    symbolOop elem_sym = oopFactory::new_symbol(sym->as_utf8()+1,
+                                                sym->utf8_length()-1,
+                                                KILL_COMPILE_ON_FATAL_(fail_type));
+    // Get element ciKlass recursively.
+    ciKlass* elem_klass =
+      get_klass_by_name_impl(accessing_klass,
+                             get_object(elem_sym)->as_symbol(),
+                             require_local);
+    if (elem_klass != NULL && elem_klass->is_loaded()) {
+      // Now make an array for it
+      return ciObjArrayKlass::make_impl(elem_klass);
+    }
   }
 
   if (found_klass != NULL) {
